package tci.demo.week1.school;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
/**
 * A student is identified by studentNumber and name.
 * A student gets semester number 1 when enrolled for the first time (e.g., new regular bachelor students).
 * studentnumber never changes. the name can change.
 * Students can have a mentor, which can be changed later.
 * semesters range from 1..8
 * with a unique student number, consisting of 5 digits.
 */

public class Student {

    // TODO
    private int studentNumber;
    private String name;
    //private ArrayList<Integer> semesterNumbers = new ArrayList<Integer>(Arrays.asList(1,2,3,4,5,6,7,8));
    private int semesterNumber;
    private String mentor;
    private List<Course> passedCourse;

    /**
     * Constructor which sets fields for studentNumber and firstName. Field semester is set to 1.
     * Should be used when student is enrolled in the first semester (e.g., regular bachelor students).
     *
     * @param studentNumber student number of 5 digits.
     * @param name     full full name of the student, e.g., Joe van der Smith
     * @throws IllegalArgumentException Exception is thrown is studentNumber is not a positive 5-digits integer,
     *                                  or semester is not in range [1..8].
     */
    public Student(int studentNumber, String name) throws IllegalArgumentException {
        // TODO
        if(name == null){
            throw new IllegalArgumentException("Name should not be null");
        }
        if(studentNumber < 0){
            throw new IllegalArgumentException("Student number should not be negative");
        }
        if(String.valueOf(studentNumber).length() != 5){
            throw new IllegalArgumentException("Student number should be a 5-digit");
        }

        this.studentNumber = studentNumber;
        this.name = name;
        this.semesterNumber = 1;
        this.passedCourse = new ArrayList<>();
    }


    /**
     * get the total ECs from all passed courses.
     * @return number of ECs.
     */
    public int getTotalECs() {
        // TODO
        int sum = 0;
        for(Course pc: passedCourse){
            sum += pc.getEc();
        }
        return sum;
    }

    /**
     * adds a passed course to a student. a student can only pass a course once.
     * @param course
     */
    public void addPassedCourse(Course course) {
        // TODO
        for(Course pc: passedCourse){
            if(course.getCode().equals(pc.getCode())){
                throw new IllegalArgumentException("Cannot add passed course: Student already passed course" + pc.getName());
            }
        }
        passedCourse.add(course);
    }

    /**
     * removes a passed course from a student.
     * @param course passed course to remove
     * @throws NotFoundException when course is not found
     */
    public void removePassedCourse(Course course) throws NotFoundException {
        // TODO
        for(Course pc:passedCourse){
            if(course.getCode().equals(pc.getCode())){
                passedCourse.remove(course);
                return;
            }
        }
        throw new NotFoundException("Course not found");
    }


    /******************************************************
     *
     *   GETTERS/SETTERS CODE IS GENERATED BY INTELLIJ,
     *   AND UNTOUCHED BY PEOPLE.
     *   THE BEHAVIOUR OF THIS CODE DOES NOT HAVE TO BE TESTED.
     *
     ********************************************************/

    // TODO: when needed.

    /** GETTERS*/
    public int getStudentNumber() {
        return studentNumber;
    }

    public String getName() {
        return name;
    }

    public int getSemesterNumber() {
        return semesterNumber;
    }

    public String getMentor() {
        return mentor;
    }

    public List<Course> getPassedCourse() {
        return passedCourse;
    }

    /** SETTERS*/
    public void setSemesterNumber(int semesterNumber) throws IllegalArgumentException{
        if(semesterNumber<1 || semesterNumber>8){
            throw new IllegalArgumentException("Semester number ranges from 1 to 8");
        }
        this.semesterNumber = semesterNumber;
    }

    public void setMentor(String mentor) {
        this.mentor = mentor;
    }
    //    public ArrayList<Integer> getSemesterNumbers() {
//        return semesterNumbers;
//    }


    /******************************************************
     *
     *   OTHER CODE GENERATED BY INTELLIJ,
     *   BUT BASED ON INPUT OF A PROGRAMMER.
     *   THE BEHAVIOUR OF THIS CODE HAS TO BE TESTED.
     *   (but not present to keep demo code short)
     *
     ********************************************************/
    // TODO

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Student)) return false;
        Student student = (Student) o;
        return getStudentNumber() == student.getStudentNumber();
    }

    @Override
    public int hashCode() {
        return Objects.hash(getStudentNumber());
    }
}
